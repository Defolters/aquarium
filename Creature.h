#ifndef CREATURE_H
#define CREATURE_H
#include "Headers.h"
#include <string>
//! положение рыбы
struct Coordinates
{
    int x;
    int y;
    int z;
};

class Creature
{
public:
    Creature();
    virtual ~Creature();
    //!функци€, котора€ определ€ет движение
    //!планктон: двигаетс€ случайно
    //!рыба: если в (текуща€ позици€ + дальность зрени€) попала друга€ рыба и период закончилс€, то движемс€ к рыбы
    //!если голод ниже границы и виден планктон, то приоритет еда
    //!если никого не видно, то двигаемс€ случайно
    Coordinates move(); 
    //! возвращает true у рыбы, если р€дом есть рыба (переменна€ near == true) и период закончилс€
    //! возвращает true у планктона, если период закончилс€.
    bool reproduce(bool near);  //функци€, котора€ у рыбы возвращает true, если 
    void dayPassed();  //! функци€, котора€ уменьшает значени€ жизни, периода и голода и которую вызывает dayPassed() у LifeManager, 
    //void eat() // ест только кого-то рангом ниже, при этом создание рангом ниже должно умереть, или вообще не ест (планктон, например)

private:
    // ѕќ—“ќяЌЌџ≈ ѕ≈–≈ћ≈ЌЌџ≈
    int lifeExpectancy;  //! продолжительность жизни
    
    //! количество дней, которые рыба может прожить без еды (есть рыба хочет 
    //! всегда, т.е. всегда плывет к планктону, но приоритет должен сто€ть у размножени€)
    int lifeWitoutFood;

    //! период, в которые создание размножаетс€ (напр. каждые 2 дн€ планктон 
    //! делитс€ почкованием и каждые 4 дн€ рыба хочет размножатьс€, т.е 
    //! плывет к другой рыбе, а когда подплывает, то по€вл€етс€ нова€ рыба)
    int lifePeriod;  

    //! название типа (рыба, планктон) дл€ getCreatures в аквариуме, дл€ статистики и прочего, чтобы отслеживать легко было.
    std::string name; 
    Color color;  //! цвет рыбы
    int rangeOfVision;  //! дальность зрени€ рыбы
    int hungerLimit;  //! граница голода
    // »«ћ≈Ќ„»¬џ≈ ѕ≈–≈ћ≈ЌЌџ≈
    Coordinates coordinates; //! положение рыбы в аквариуме
    int life;  //! количество дней, которые осталось жить рыбе
    int withoutFood;  //! количество дней, кот. осталось жить рыбе без еды
    int period;  //! количество дней, кот. остались до следующего размножени€
    
}; 

#endif  //! CREATURE_H