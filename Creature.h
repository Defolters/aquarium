#ifndef CREATURE_H
#define CREATURE_H
#include "Object.h"
#include "LifeType.h"
#include <mutex>
//#include "Coordinates.h"
//! положение рыбы


class Creature
	: Object
{
public:
	std::mutex spriteLocker;
    Creature();
    virtual ~Creature();
    //!функци€, котора€ определ€ет движение
    //!планктон: двигаетс€ случайно
    //!рыба: если в (текуща€ позици€ + дальность зрени€) попала друга€ рыба и период закончилс€, то движемс€ к рыбы
    //!если голод ниже границы и виден планктон, то приоритет еда
    //!если никого не видно, то двигаемс€ случайно
    Coordinates move(); 
    //! возвращает true у рыбы, если р€дом есть рыба и период закончилс€
    //! возвращает true у планктона, если период закончилс€.
    bool reproduce();  //есть р€дом рыба или нет провер€ть лучше в теле метода а не передавать как аргумент, имхо
    void dayPassed();  //! функци€, котора€ уменьшает значени€ жизни, периода и голода и которую вызывает dayPassed() у LifeManager, 
    void eat(); //! восстанавливает голод, ест только кого-то рангом ниже, при этом создание рангом ниже должно умереть, или вообще не ест (планктон, например)
private:
    // ѕќ—“ќяЌЌџ≈ ѕ≈–≈ћ≈ЌЌџ≈ //<- посто€нные дл€ каждой отдельной рыбы или дл€ класса? если второе то лучше объ€вить их const
	int lifeExpectancy;  //! продолжительность жизни
    
    //! количество дней, которые рыба может прожить без еды (есть рыба хочет 
    //! всегда, т.е. всегда плывет к планктону, но приоритет должен сто€ть у размножени€)
    int lifeWitoutFood;

    //! период, в которые создание размножаетс€ (напр. каждые 2 дн€ планктон 
    //! делитс€ почкованием и каждые 4 дн€ рыба хочет размножатьс€, т.е 
    //! плывет к другой рыбе, а когда подплывает, то по€вл€етс€ нова€ рыба)
    int reproductionPeriod;  

    //! тип (рыба, планктон) дл€ getCreatures в аквариуме, дл€ статистики и прочего, чтобы отслеживать легко было.
    LifeType type; 
    Color color;  //! цвет рыбы
    int rangeOfVision;  //! дальность зрени€ рыбы
    int hungerLimit;  //! граница голода

    // »«ћ≈Ќ„»¬џ≈ ѕ≈–≈ћ≈ЌЌџ≈
    int lifeDaysLeft;  //! количество дней, которые осталось жить рыбе
    int withoutFoodDaysLeft;  //! количество дней, кот. осталось жить рыбе без еды
    int reproductionDaysLeft;  //! количество дней, кот. остались до следующего размножени€
}; 

#endif  //! CREATURE_H