#ifndef CREATURE_H
#define CREATURE_H
#include "Object.h"
#include "LifeType.h"
#include <mutex>
//#include "Coordinates.h"
//! положение рыбы

/*!
\brief Класс, реализующий анимацию

нужны комменты к полям и методам, чтобы я мог помочь и понять.
*/
class Creature
	: Object
{
public:
	std::mutex spriteLocker;
    Creature();
    virtual ~Creature();
    //!функция, которая определяет движение
    //!планктон: двигается случайно
    //!рыба: если в (текущая позиция + дальность зрения) попала другая рыба и период закончился, то движемся к рыбы
    //!если голод ниже границы и виден планктон, то приоритет еда
    //!если никого не видно, то двигаемся случайно
    Coordinates move(); 
    //! возвращает true у рыбы, если рядом есть рыба и период закончился
    //! возвращает true у планктона, если период закончился.
    bool reproduce();  //есть рядом рыба или нет проверять лучше в теле метода а не передавать как аргумент, имхо
    void dayPassed();  //! функция, которая уменьшает значения жизни, периода и голода и которую вызывает dayPassed() у LifeManager, 
    void eat(); //! восстанавливает голод, ест только кого-то рангом ниже, при этом создание рангом ниже должно умереть, или вообще не ест (планктон, например)
private:
	int lifeExpectancy;  //! продолжительность жизни
    
    //! количество дней, которые рыба может прожить без еды (есть рыба хочет 
    //! всегда, т.е. всегда плывет к планктону, но приоритет должен стоять у размножения)
    int lifeWitoutFood;

    //! период, в которые создание размножается (напр. каждые 2 дня планктон 
    //! делится почкованием и каждые 4 дня рыба хочет размножаться, т.е 
    //! плывет к другой рыбе, а когда подплывает, то появляется новая рыба)
    int reproductionPeriod;  

    //! тип (рыба, планктон) для getCreatures в аквариуме, для статистики и прочего, чтобы отслеживать легко было.
    LifeType type; 
    int rangeOfVision;  //! дальность зрения рыбы
    int hungerLimit;  //! граница голода

    // ИЗМЕНЧИВЫЕ ПЕРЕМЕННЫЕ
    int lifeDaysLeft;  //! количество дней, которые осталось жить рыбе
    int withoutFoodDaysLeft;  //! количество дней, кот. осталось жить рыбе без еды
    int reproductionDaysLeft;  //! количество дней, кот. остались до следующего размножения
}; 

#endif  //! CREATURE_H